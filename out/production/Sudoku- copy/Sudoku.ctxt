#BlueJ class context
comment0.target=Sudoku
comment0.text=\n\ This\ is\ the\ class\ Sudoku\ and\ it\ handles\ the\ functionality\ of\ the\ main\ game.\n\ @author\ Lauren\ Scott\n\ @version\ Student\ Sample\ Code\ edited\ by\ Theodora\n
comment1.params=difficulty
comment1.target=Sudoku(java.lang.String)
comment1.text=\n\ This\ is\ the\ constructor\ for\ the\ class\ Sudoku\n
comment10.params=row\ col\ number
comment10.target=java.lang.Boolean\ makeMove(java.lang.String,\ java.lang.String,\ java.lang.String)
comment10.text=\n\ This\ method\ allows\ a\ user\ to\ make\ a\ move\ in\ the\ game\n\ @param\ row\ -\ the\ row\ of\ the\ move\n\ @param\ col\ -\ the\ column\ of\ the\ move\n\ @param\ number\ -\ the\ number\ they\ are\ wishing\ to\ enter\ in\ the\ cell\n\ @return\ whether\ the\ move\ was\ valid\n
comment11.params=row\ col\ number
comment11.target=boolean\ makeAMove(int,\ int,\ java.lang.String)
comment12.params=
comment12.target=boolean\ GameWon()
comment13.params=cellButtons
comment13.target=void\ undoMove(Cell[][])
comment14.params=
comment14.target=Slot[][]\ getNewBoard()
comment2.params=difficulty
comment2.target=void\ updateLevel(java.lang.String)
comment3.params=
comment3.target=Slot[][]\ getMoves()
comment3.text=\n\ This\ method\ gets\ the\ entire\ set\ of\ moves\ in\ the\ game\n\ @return\ the\ set\ of\ moves\n
comment4.params=row\ col
comment4.target=java.lang.String\ getIndividualMove(int,\ int)
comment4.text=\n\ This\ method\ gets\ an\ individual\ cell's\ state\n\ @param\ row\ -\ the\ row\ of\ the\ move\n\ @param\ col\ -\ the\ column\ of\ the\ move\n\ @return\ The\ state\ of\ that\ cell\n
comment5.params=
comment5.target=int\ calculateGameSize()
comment5.text=\n\ This\ method\ reads\ the\ game\ size\ from\ the\ file\ \n\ @return\ the\ size\ of\ the\ puzzle\n
comment6.params=
comment6.target=int\ getGameSize()
comment6.text=\n\ This\ method\ provides\ access\ to\ the\ gameSize\ from\ other\ classes\n\ @return\ the\ size\ of\ the\ puzzle\n
comment7.params=
comment7.target=Slot[][]\ readLevelFile()
comment7.text=\n\ This\ method\ reads\ the\ level\ file\ to\ populate\ the\ game\n\ @return\ The\ moves\ stored\ in\ the\ file\n
comment8.params=difficulty
comment8.target=void\ loadWinSolution(java.lang.String)
comment8.text=\n\ This\ method\ reads\ the\ solution\ file\ that\ corresponds\ to\ the\ level\ file\n
comment9.params=
comment9.target=java.lang.Boolean\ checkWin()
comment9.text=\n\ This\ method\ checks\ whether\ the\ game\ has\ been\ won\n\ @return\ whether\ the\ game\ has\ been\ won\n
numComments=15
